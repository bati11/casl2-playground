/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./lib/AssembleError.js":
/*!******************************!*\
  !*** ./lib/AssembleError.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AssembleError\": () => (/* binding */ AssembleError)\n/* harmony export */ });\nclass AssembleError extends Error {\n    constructor(tokens, e) {\n        super(e.message);\n        this.tokens = tokens;\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/AssembleError.js?");

/***/ }),

/***/ "./lib/assembler.js":
/*!**************************!*\
  !*** ./lib/assembler.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"display\": () => (/* binding */ display),\n/* harmony export */   \"assemble\": () => (/* binding */ assemble)\n/* harmony export */ });\n/* harmony import */ var _casl2_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./casl2/parser */ \"./lib/casl2/parser.js\");\n/* harmony import */ var _casl2_procedureFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./casl2/procedureFactory */ \"./lib/casl2/procedureFactory.js\");\n/* harmony import */ var _AssembleError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AssembleError */ \"./lib/AssembleError.js\");\n\n\n\nfunction display(result) {\n    return result.map(row => {\n        let v = \"\";\n        if (row.bytecode != null) {\n            const view = new DataView(row.bytecode);\n            if (row.bytecode.byteLength >= 2) {\n                v = view.getUint8(0).toString(16).padStart(2, \"0\");\n                v = v + view.getUint8(1).toString(16).padStart(2, \"0\");\n            }\n            if (row.bytecode.byteLength >= 4) {\n                v = v + \" \";\n                v = v + view.getUint16(2).toString(16).padStart(4, \"0\");\n            }\n        }\n        return `${row.memAddress}\t${v}\t${row.tokens.label || \"\t\"}\t${row.tokens.operator}\t${row.tokens.operand}`;\n    }).join(\"\\n\");\n}\nfunction assemble(startAddress, text, labels, FR, grMap, memory, SP) {\n    if (text == null || text.length == 0) {\n        // NOP\n        return { assembleResult: [], procMap: new Map() };\n    }\n    const aggregated = (0,_casl2_parser__WEBPACK_IMPORTED_MODULE_0__.aggregateByLabel)(text);\n    if (aggregated instanceof Error) {\n        throw aggregated;\n    }\n    for (let label of aggregated.keys()) {\n        labels.set(label, { label, memAddress: 0 });\n    }\n    const labelInstructionMap = new Map();\n    let memAddress = startAddress;\n    aggregated.forEach((lines, labelText) => {\n        const label = labels.get(labelText);\n        if (label == null)\n            throw Error(\"\");\n        // set label address\n        label.memAddress = memAddress;\n        // set instructions by label\n        const instructions = new Array();\n        lines.forEach((tokens) => {\n            try {\n                const inst = (0,_casl2_procedureFactory__WEBPACK_IMPORTED_MODULE_1__.makeProcedure)(tokens, labels, FR, grMap, memory, SP);\n                if (inst != null) {\n                    instructions.push(inst);\n                    const wordLength = inst.wordLength;\n                    memAddress = memAddress + wordLength;\n                }\n            }\n            catch (e) {\n                if (e instanceof Error) {\n                    throw new _AssembleError__WEBPACK_IMPORTED_MODULE_2__.AssembleError(tokens, e);\n                }\n                else {\n                    throw e;\n                }\n            }\n        });\n        labelInstructionMap.set(label, instructions);\n    });\n    const assembleResult = [];\n    const procMap = new Map();\n    labelInstructionMap.forEach((insts, label) => {\n        let memAddress = label.memAddress;\n        insts.forEach(inst => {\n            const generated = inst.gen(memAddress);\n            if (generated == null) {\n                assembleResult.push({ memAddress, bytecode: null, tokens: inst.tokens });\n            }\n            else {\n                const { bytecode, proc } = generated;\n                const bs = new Uint8Array(bytecode);\n                memory.storeLogical(memAddress, (bs[0] << 8) + bs[1]);\n                if (inst.wordLength == 2) {\n                    memory.storeLogical(memAddress + 1, (bs[2] << 8) + bs[3]);\n                }\n                assembleResult.push({ memAddress, bytecode, tokens: inst.tokens });\n                procMap.set(memAddress, { bytecode, proc });\n                memAddress = memAddress + inst.wordLength;\n            }\n        });\n    });\n    return { assembleResult, procMap };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/assembler.js?");

/***/ }),

/***/ "./lib/casl2/parser.js":
/*!*****************************!*\
  !*** ./lib/casl2/parser.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"aggregateByLabel\": () => (/* binding */ aggregateByLabel)\n/* harmony export */ });\n/* harmony import */ var _tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenizer */ \"./lib/casl2/tokenizer.js\");\n\nconst r = /^\\s*;.*$/;\nfunction aggregateByLabel(text) {\n    const result = new Map();\n    const lines = text.split(\"\\n\");\n    let currentLabel = \"\";\n    let currentTokens = [];\n    let instructionNum = 0;\n    for (let lineNum = 0; lineNum < lines.length; lineNum++) {\n        const line = lines[lineNum];\n        if (r.test(line)) {\n            // Comment Line\n            continue;\n        }\n        // line -> tokens\n        const tokenized = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_0__.tokenize)(line, lineNum, instructionNum);\n        if (tokenized instanceof Error) {\n            return tokenized;\n        }\n        instructionNum++;\n        const label = tokenized.label;\n        if (label != \"\") {\n            if (currentLabel != \"\") {\n                result.set(currentLabel, currentTokens);\n            }\n            if (result.has(label)) {\n                return new Error(`duplicated label: ${label}`);\n            }\n            currentLabel = label;\n            currentTokens = [];\n        }\n        tokenized.operand = trimComment(tokenized.operand);\n        currentTokens.push(tokenized);\n    }\n    result.set(currentLabel, currentTokens);\n    return result;\n}\nfunction trimComment(operand) {\n    const commentStartIdx = operand.search(\" \");\n    if (commentStartIdx >= 0) {\n        return operand.substring(0, commentStartIdx);\n    }\n    return operand;\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/parser.js?");

/***/ }),

/***/ "./lib/casl2/procedureFactory.js":
/*!***************************************!*\
  !*** ./lib/casl2/procedureFactory.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeProcedure\": () => (/* binding */ makeProcedure)\n/* harmony export */ });\n/* harmony import */ var _procedures_execDC__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./procedures/execDC */ \"./lib/casl2/procedures/execDC.js\");\n/* harmony import */ var _procedures_makeLD__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./procedures/makeLD */ \"./lib/casl2/procedures/makeLD.js\");\n/* harmony import */ var _procedures_makeLAD__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./procedures/makeLAD */ \"./lib/casl2/procedures/makeLAD.js\");\n/* harmony import */ var _procedures_makeADDA__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./procedures/makeADDA */ \"./lib/casl2/procedures/makeADDA.js\");\n/* harmony import */ var _procedures_execDS__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./procedures/execDS */ \"./lib/casl2/procedures/execDS.js\");\n/* harmony import */ var _procedures_execSTART__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./procedures/execSTART */ \"./lib/casl2/procedures/execSTART.js\");\n/* harmony import */ var _procedures_execEND__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./procedures/execEND */ \"./lib/casl2/procedures/execEND.js\");\n/* harmony import */ var _procedures_makeRET__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./procedures/makeRET */ \"./lib/casl2/procedures/makeRET.js\");\n/* harmony import */ var _procedures_makeSUBA__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./procedures/makeSUBA */ \"./lib/casl2/procedures/makeSUBA.js\");\n/* harmony import */ var _procedures_makeJUMP__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./procedures/makeJUMP */ \"./lib/casl2/procedures/makeJUMP.js\");\n/* harmony import */ var _procedures_makeJPL__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./procedures/makeJPL */ \"./lib/casl2/procedures/makeJPL.js\");\n/* harmony import */ var _procedures_makeJMI__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./procedures/makeJMI */ \"./lib/casl2/procedures/makeJMI.js\");\n/* harmony import */ var _procedures_makeJZE__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./procedures/makeJZE */ \"./lib/casl2/procedures/makeJZE.js\");\n/* harmony import */ var _procedures_makeJNZ__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./procedures/makeJNZ */ \"./lib/casl2/procedures/makeJNZ.js\");\n/* harmony import */ var _procedures_makeJOV__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./procedures/makeJOV */ \"./lib/casl2/procedures/makeJOV.js\");\n/* harmony import */ var _procedures_makeADDL__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./procedures/makeADDL */ \"./lib/casl2/procedures/makeADDL.js\");\n/* harmony import */ var _procedures_makeSUBL__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./procedures/makeSUBL */ \"./lib/casl2/procedures/makeSUBL.js\");\n/* harmony import */ var _procedures_makeCPA__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./procedures/makeCPA */ \"./lib/casl2/procedures/makeCPA.js\");\n/* harmony import */ var _procedures_makeCPL__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./procedures/makeCPL */ \"./lib/casl2/procedures/makeCPL.js\");\n/* harmony import */ var _procedures_makePUSH__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./procedures/makePUSH */ \"./lib/casl2/procedures/makePUSH.js\");\n/* harmony import */ var _procedures_makePOP__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./procedures/makePOP */ \"./lib/casl2/procedures/makePOP.js\");\n/* harmony import */ var _procedures_makeST__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./procedures/makeST */ \"./lib/casl2/procedures/makeST.js\");\n/* harmony import */ var _procedures_makeOR__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./procedures/makeOR */ \"./lib/casl2/procedures/makeOR.js\");\n/* harmony import */ var _procedures_makeAND__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./procedures/makeAND */ \"./lib/casl2/procedures/makeAND.js\");\n/* harmony import */ var _procedures_makeXOR__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./procedures/makeXOR */ \"./lib/casl2/procedures/makeXOR.js\");\n/* harmony import */ var _procedures_makeSLA__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./procedures/makeSLA */ \"./lib/casl2/procedures/makeSLA.js\");\n/* harmony import */ var _procedures_makeSRA__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./procedures/makeSRA */ \"./lib/casl2/procedures/makeSRA.js\");\n/* harmony import */ var _procedures_makeSLL__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./procedures/makeSLL */ \"./lib/casl2/procedures/makeSLL.js\");\n/* harmony import */ var _procedures_makeSRL__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./procedures/makeSRL */ \"./lib/casl2/procedures/makeSRL.js\");\n/* harmony import */ var _procedures_makeCALL__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./procedures/makeCALL */ \"./lib/casl2/procedures/makeCALL.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction makeProcedure(tokens, labels, flagRegister, grMap, memory, SP) {\n    switch (tokens.operator) {\n        case \"START\":\n            return (0,_procedures_execSTART__WEBPACK_IMPORTED_MODULE_5__.execSTART)(tokens, labels, memory);\n        case \"END\":\n            return (0,_procedures_execEND__WEBPACK_IMPORTED_MODULE_6__.execEND)(tokens, labels, memory);\n        case \"DC\":\n            return (0,_procedures_execDC__WEBPACK_IMPORTED_MODULE_0__.execDC)(tokens, labels, memory);\n        case \"DS\":\n            return (0,_procedures_execDS__WEBPACK_IMPORTED_MODULE_4__.execDS)(tokens, labels, memory);\n        case \"LD\":\n            return (0,_procedures_makeLD__WEBPACK_IMPORTED_MODULE_1__.makeLD)(tokens, labels, flagRegister, grMap, memory);\n        case \"ST\":\n            return (0,_procedures_makeST__WEBPACK_IMPORTED_MODULE_21__.makeST)(tokens, labels, grMap, memory);\n        case \"LAD\":\n            return (0,_procedures_makeLAD__WEBPACK_IMPORTED_MODULE_2__.makeLAD)(tokens, labels, grMap, memory);\n        case \"ADDA\":\n            return (0,_procedures_makeADDA__WEBPACK_IMPORTED_MODULE_3__.makeADDA)(tokens, labels, flagRegister, grMap, memory);\n        case \"SUBA\":\n            return (0,_procedures_makeSUBA__WEBPACK_IMPORTED_MODULE_8__.makeSUBA)(tokens, labels, flagRegister, grMap, memory);\n        case \"ADDL\":\n            return (0,_procedures_makeADDL__WEBPACK_IMPORTED_MODULE_15__.makeADDL)(tokens, labels, flagRegister, grMap, memory);\n        case \"SUBL\":\n            return (0,_procedures_makeSUBL__WEBPACK_IMPORTED_MODULE_16__.makeSUBL)(tokens, labels, flagRegister, grMap, memory);\n        case \"CPA\":\n            return (0,_procedures_makeCPA__WEBPACK_IMPORTED_MODULE_17__.makeCPA)(tokens, labels, flagRegister, grMap, memory);\n        case \"CPL\":\n            return (0,_procedures_makeCPL__WEBPACK_IMPORTED_MODULE_18__.makeCPL)(tokens, labels, flagRegister, grMap, memory);\n        case \"JUMP\":\n            return (0,_procedures_makeJUMP__WEBPACK_IMPORTED_MODULE_9__.makeJUMP)(tokens, labels, grMap);\n        case \"JPL\":\n            return (0,_procedures_makeJPL__WEBPACK_IMPORTED_MODULE_10__.makeJPL)(tokens, labels, flagRegister, grMap);\n        case \"JMI\":\n            return (0,_procedures_makeJMI__WEBPACK_IMPORTED_MODULE_11__.makeJMI)(tokens, labels, flagRegister, grMap);\n        case \"JZE\":\n            return (0,_procedures_makeJZE__WEBPACK_IMPORTED_MODULE_12__.makeJZE)(tokens, labels, flagRegister, grMap);\n        case \"JNZ\":\n            return (0,_procedures_makeJNZ__WEBPACK_IMPORTED_MODULE_13__.makeJNZ)(tokens, labels, flagRegister, grMap);\n        case \"JOV\":\n            return (0,_procedures_makeJOV__WEBPACK_IMPORTED_MODULE_14__.makeJOV)(tokens, labels, flagRegister, grMap);\n        case \"OR\":\n            return (0,_procedures_makeOR__WEBPACK_IMPORTED_MODULE_22__.makeOR)(tokens, labels, flagRegister, grMap, memory);\n        case \"AND\":\n            return (0,_procedures_makeAND__WEBPACK_IMPORTED_MODULE_23__.makeAND)(tokens, labels, flagRegister, grMap, memory);\n        case \"XOR\":\n            return (0,_procedures_makeXOR__WEBPACK_IMPORTED_MODULE_24__.makeXOR)(tokens, labels, flagRegister, grMap, memory);\n        case \"SLL\":\n            return (0,_procedures_makeSLL__WEBPACK_IMPORTED_MODULE_27__.makeSLL)(tokens, labels, flagRegister, grMap, memory);\n        case \"SRL\":\n            return (0,_procedures_makeSRL__WEBPACK_IMPORTED_MODULE_28__.makeSRL)(tokens, labels, flagRegister, grMap, memory);\n        case \"SLA\":\n            return (0,_procedures_makeSLA__WEBPACK_IMPORTED_MODULE_25__.makeSLA)(tokens, labels, flagRegister, grMap, memory);\n        case \"SRA\":\n            return (0,_procedures_makeSRA__WEBPACK_IMPORTED_MODULE_26__.makeSRA)(tokens, labels, flagRegister, grMap, memory);\n        case \"PUSH\":\n            return (0,_procedures_makePUSH__WEBPACK_IMPORTED_MODULE_19__.makePUSH)(tokens, grMap, memory, SP);\n        case \"POP\":\n            return (0,_procedures_makePOP__WEBPACK_IMPORTED_MODULE_20__.makePOP)(tokens, grMap, memory, SP);\n        case \"CALL\":\n            return (0,_procedures_makeCALL__WEBPACK_IMPORTED_MODULE_29__.makeCALL)(tokens, labels, grMap, memory, SP);\n        case \"RET\":\n            return (0,_procedures_makeRET__WEBPACK_IMPORTED_MODULE_7__.makeRET)(tokens, memory, SP);\n        default:\n            throw Error(`${tokens.operator} is unknown`);\n    }\n    return null;\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedureFactory.js?");

/***/ }),

/***/ "./lib/casl2/procedures/execDC.js":
/*!****************************************!*\
  !*** ./lib/casl2/procedures/execDC.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"execDC\": () => (/* binding */ execDC)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction execDC(tokens, labels, memory) {\n    const labelText = tokens.label;\n    const operand = tokens.operand;\n    let values = [];\n    if (operand.startsWith(\"'\")) {\n        if (!operand.endsWith(\"'\")) {\n            throw new Error(`operand starts with \"'\", but not ends with \"'\": ${tokens.operand}`);\n        }\n        const s = operand.substring(1, operand.length - 1);\n        if (!(0,_strings__WEBPACK_IMPORTED_MODULE_2__.isJisX0201)(s)) {\n            throw new Error(`operand is string, then should be character set of JIS X 0201: ${tokens.operand}`);\n        }\n        values = s.split(\"\").map(c => c.charCodeAt(0));\n    }\n    else {\n        values = operand.split(\",\").map(v => {\n            let intVal = 0;\n            if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(v)) {\n                intVal = Number(v);\n            }\n            else if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isHexadecimal)(v)) {\n                intVal = parseInt(v.replace(\"#\", \"\"), 16);\n            }\n            else {\n                throw new Error(`operand should be positive number: ${tokens.operand}`);\n            }\n            if (intVal < -32768) {\n                throw new Error(`operand should be greater than -32769: ${tokens.operand}`);\n            }\n            else if (intVal > 65535) {\n                throw new Error(`operand should be less than 65536: ${tokens.operand}`);\n            }\n            return intVal;\n        });\n    }\n    const wordLength = values.length;\n    return {\n        wordLength,\n        tokens,\n        gen: (currentMemAddress) => {\n            const address = labelText == \"\" ? currentMemAddress : (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(labelText, labels).memAddress;\n            if (address == null) {\n                throw Error(`address is null.`);\n            }\n            // load constant value in memory\n            const bytecode = new ArrayBuffer(2 * values.length);\n            const view = new DataView(bytecode);\n            values.forEach((v, index) => {\n                if (v > 32767) {\n                    memory.storeLogical(address + index, v);\n                }\n                else {\n                    memory.store(address + index, v);\n                }\n                view.setInt16(index * 2, v);\n            });\n            return {\n                bytecode,\n                proc: (PR) => {\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/execDC.js?");

/***/ }),

/***/ "./lib/casl2/procedures/execDS.js":
/*!****************************************!*\
  !*** ./lib/casl2/procedures/execDS.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"execDS\": () => (/* binding */ execDS)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction execDS(tokens, labels, memory) {\n    const operand = tokens.operand;\n    const labelText = tokens.label;\n    if (!(0,_strings__WEBPACK_IMPORTED_MODULE_2__.isDigits)(operand)) {\n        throw new Error(`operand should be positive number: ${tokens}`);\n    }\n    const reservedSpace = Number(operand);\n    const wordLength = reservedSpace;\n    return {\n        wordLength,\n        tokens,\n        gen: (currentMemAddress) => {\n            const address = labelText == \"\" ? currentMemAddress : (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(labelText, labels).memAddress;\n            if (address == null) {\n                throw Error(`address is null.`);\n            }\n            return {\n                bytecode: new ArrayBuffer(0),\n                proc: (PR) => {\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/execDS.js?");

/***/ }),

/***/ "./lib/casl2/procedures/execEND.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/execEND.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"execEND\": () => (/* binding */ execEND)\n/* harmony export */ });\nfunction execEND(tokens, labels, memory) {\n    return {\n        wordLength: 0,\n        tokens,\n        gen: () => null\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/execEND.js?");

/***/ }),

/***/ "./lib/casl2/procedures/execSTART.js":
/*!*******************************************!*\
  !*** ./lib/casl2/procedures/execSTART.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"execSTART\": () => (/* binding */ execSTART)\n/* harmony export */ });\nfunction execSTART(tokens, labels, memory) {\n    return {\n        wordLength: 0,\n        tokens,\n        gen: () => null\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/execSTART.js?");

/***/ }),

/***/ "./lib/casl2/procedures/labelAccessor.js":
/*!***********************************************!*\
  !*** ./lib/casl2/procedures/labelAccessor.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLabelOrThrow\": () => (/* binding */ getLabelOrThrow)\n/* harmony export */ });\nfunction getLabelOrThrow(text, labels) {\n    const label = labels.get(text);\n    if (label == null) {\n        throw new Error(`not found label: ${text}`);\n    }\n    return label;\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/labelAccessor.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeADDA.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeADDA.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeADDA\": () => (/* binding */ makeADDA)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeADDA(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1+GR2 -> GR1\n        const opCode = 0x24;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. ADDA GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() + operand2GR.lookup();\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1+10 -> GR1\n        const opCode = 0x20;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. ADDA GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() + memory.lookup(address);\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeADDA.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeADDL.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeADDL.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeADDL\": () => (/* binding */ makeADDL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeADDL(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1+GR2 -> GR1\n        const opCode = 0x26;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. ADDL GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookupLogical() + operand2GR.lookupLogical();\n                        operand1GR.storeLogical(v);\n                        flagRegister.setLogical(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1+10 -> GR1\n        const opCode = 0x22;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. ADD GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookupLogical() + memory.lookupLogical(address);\n                        operand1GR.storeLogical(v);\n                        flagRegister.setLogical(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeADDL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeAND.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeAND.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeAND\": () => (/* binding */ makeAND)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeAND(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1 AND GR2 -> GR1\n        const opCode = 0x34;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. AND GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() & operand2GR.lookup();\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1 AND 10 -> GR1\n        const opCode = 0x30;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. AND GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() & memory.lookup(address);\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeAND.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeCALL.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeCALL.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeCALL\": () => (/* binding */ makeCALL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeCALL(tokens, labels, grMap, memory, SP) {\n    const ts = tokens.operand.split(\",\");\n    const value = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x80;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(value);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(value, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    // PR -> memory(SP-1)\n                    // value -> PR\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    SP.storeLogical(SP.lookupLogical() - 1);\n                    memory.storeLogical(SP.lookupLogical(), PR.lookupLogical() + wordLength);\n                    PR.storeLogical(address);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeCALL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeCPA.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeCPA.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeCPA\": () => (/* binding */ makeCPA)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeCPA(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1 > GR2 -> FR\n        const opCode = 0x44;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() - operand2GR.lookup();\n                        flagRegister.setByCPA(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1 > memory(10) -> FR\n        const opCode = 0x40;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() - memory.lookup(address);\n                        flagRegister.setByCPA(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeCPA.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeCPL.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeCPL.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeCPL\": () => (/* binding */ makeCPL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeCPL(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1 > GR2 -> FR\n        const opCode = 0x45;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookupLogical() - operand2GR.lookupLogical();\n                        flagRegister.setLogicalByCPL(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1 > 10 -> FR\n        const opCode = 0x41;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookupLogical() - memory.lookupLogical(address);\n                        flagRegister.setLogicalByCPL(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeCPL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJMI.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeJMI.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJMI\": () => (/* binding */ makeJMI)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJMI(tokens, labels, flagRegister, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x61;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    if (flagRegister.sf()) {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                    }\n                    else {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, 2);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJMI.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJNZ.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeJNZ.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJNZ\": () => (/* binding */ makeJNZ)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJNZ(tokens, labels, flagRegister, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x62;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    if (flagRegister.zf()) {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, 2);\n                    }\n                    else {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJNZ.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJOV.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeJOV.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJOV\": () => (/* binding */ makeJOV)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJOV(tokens, labels, flagRegister, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x66;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    if (flagRegister.of()) {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                    }\n                    else {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, 2);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJOV.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJPL.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeJPL.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJPL\": () => (/* binding */ makeJPL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJPL(tokens, labels, flagRegister, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x65;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    if (flagRegister.sf()) {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, 2);\n                    }\n                    else {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJPL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJUMP.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeJUMP.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJUMP\": () => (/* binding */ makeJUMP)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJUMP(tokens, labels, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x64;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. JUMP adr,GR2 => [0x6402, address]\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJUMP.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeJZE.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeJZE.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeJZE\": () => (/* binding */ makeJZE)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeJZE(tokens, labels, flagRegister, grMap) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x63;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(operand)) {\n        getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(operand);\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(operand, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    if (flagRegister.zf()) {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.setPR)(PR, address);\n                    }\n                    else {\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, 2);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeJZE.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeLAD.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeLAD.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeLAD\": () => (/* binding */ makeLAD)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeLAD(tokens, labels, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const target = ts[0];\n    const value = ts[1];\n    const distGR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n    const grx = ts.length > 2 ? ts[2] : null;\n    const opCode = 0x12;\n    const wordLength = 2;\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(value)) {\n        getAddress = () => Number(value);\n    }\n    else if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isHexadecimal)(value)) {\n        getAddress = () => Number(parseInt(value.replace(\"#\", \"\"), 16));\n    }\n    else {\n        const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(value, labels);\n        getAddress = () => label.memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. LAD GR1,adr => [0x1210, address]\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(distGR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    distGR.store(address);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeLAD.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeLD.js":
/*!****************************************!*\
  !*** ./lib/casl2/procedures/makeLD.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeLD\": () => (/* binding */ makeLD)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeLD(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const target = ts[0];\n    const value = ts[1];\n    const distGR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(value)) {\n        // GR -> GR\n        const opCode = 0x14;\n        const wordLength = 1;\n        const srcGR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(value, grMap);\n        if (grx != null) {\n            throw new Error(`cannot use GRx: ${tokens}`);\n        }\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. LD GR1,GR2 => [0x1412]\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(distGR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(srcGR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const value = srcGR.lookup();\n                        distGR.store(value);\n                        flagRegister.set(value);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // memory -> GR\n        const opCode = 0x10;\n        const wordLength = 2;\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n            getAddress = () => (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(value);\n        }\n        else {\n            const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(value, labels);\n            getAddress = () => label.memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. LD GR1,adr => [0x1010, address]\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(distGR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const value = memory.lookup(address);\n                        distGR.store(value);\n                        flagRegister.set(value);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeLD.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeOR.js":
/*!****************************************!*\
  !*** ./lib/casl2/procedures/makeOR.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeOR\": () => (/* binding */ makeOR)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeOR(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1 OR GR2 -> GR1\n        const opCode = 0x35;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. OR GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() | operand2GR.lookup();\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1 OR 10 -> GR1\n        const opCode = 0x31;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. OR GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() | memory.lookup(address);\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeOR.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makePOP.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makePOP.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePOP\": () => (/* binding */ makePOP)\n/* harmony export */ });\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n\nfunction makePOP(tokens, grMap, memory, SP) {\n    const ts = tokens.operand.split(\",\");\n    const operand = ts[0];\n    const opCode = 0x71;\n    const wordLength = 1;\n    const targetGR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.getGrOrThrow)(operand, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.grToBytecode)(targetGR) << 4) + 0);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    // memory(SP) -> GR\n                    let address = memory.lookupLogical(SP.lookupLogical());\n                    targetGR.storeLogical(address);\n                    SP.storeLogical(SP.lookupLogical() + 1);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makePOP.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makePUSH.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makePUSH.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePUSH\": () => (/* binding */ makePUSH)\n/* harmony export */ });\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\nfunction makePUSH(tokens, grMap, memory, SP) {\n    const ts = tokens.operand.split(\",\");\n    const value = ts[0];\n    const grx = ts.length > 1 ? ts[1] : null;\n    const opCode = 0x70;\n    const wordLength = 2;\n    if (!(0,_strings__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value)) {\n        throw new Error(`operand should be address: ${tokens}`);\n    }\n    const operandAddress = (0,_strings__WEBPACK_IMPORTED_MODULE_1__.normalizeAddress)(value);\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, (0 << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    // value -> memory(SP-1)\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    SP.storeLogical(SP.lookupLogical() - 1);\n                    memory.storeLogical(SP.lookupLogical(), address);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_0__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makePUSH.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeRET.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeRET.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeRET\": () => (/* binding */ makeRET)\n/* harmony export */ });\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n\nfunction makeRET(tokens, memory, SP) {\n    const opCode = 0x81;\n    return {\n        wordLength: 1,\n        tokens,\n        gen: () => {\n            const bytecode = new ArrayBuffer(2);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, 0);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    const sp = SP.lookupLogical();\n                    if (sp != _registerAccessor__WEBPACK_IMPORTED_MODULE_0__.END_ADDRESS) {\n                        const address = memory.lookupLogical(sp);\n                        PR.storeLogical(address);\n                        SP.storeLogical(sp + 1);\n                    }\n                    else {\n                        PR.store(-32678);\n                    }\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeRET.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSLA.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeSLA.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSLA\": () => (/* binding */ makeSLA)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSLA(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    // GR1 << 2 -> GR1\n    const opCode = 0x50;\n    const wordLength = 2;\n    const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n        getAddress = () => Number(target);\n    }\n    else {\n        getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. SLA GR1,adr\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let b = operandAddress;\n                    if (indexGR != null) {\n                        b = b + indexGR.lookup();\n                    }\n                    const isNegative = ((operand1GR.lookup() >> 15) & 1) !== 0;\n                    let v = operand1GR.lookup() << b;\n                    if (isNegative) {\n                        v = v | (1 << 15);\n                    }\n                    else {\n                        v = v & ~(1 << 15);\n                    }\n                    let overflowFlag = false;\n                    if (((operand1GR.lookupLogical() >> (16 - 1 - b)) & 1) !== 0) {\n                        overflowFlag = true;\n                    }\n                    operand1GR.store(v);\n                    flagRegister.setWithOverflowFlag(v, overflowFlag);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSLA.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSLL.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeSLL.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSLL\": () => (/* binding */ makeSLL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSLL(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    // GR1 << 2 -> GR1\n    const opCode = 0x52;\n    const wordLength = 2;\n    const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n        getAddress = () => Number(target);\n    }\n    else {\n        getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. SLL GR1,adr\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let b = operandAddress;\n                    if (indexGR != null) {\n                        b = b + indexGR.lookup();\n                    }\n                    const v = operand1GR.lookupLogical() << b;\n                    let overflowFlag = false;\n                    if (((operand1GR.lookupLogical() >> (16 - b)) & 1) !== 0) {\n                        overflowFlag = true;\n                    }\n                    operand1GR.store(v);\n                    flagRegister.setWithOverflowFlag(v, overflowFlag);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSLL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSRA.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeSRA.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSRA\": () => (/* binding */ makeSRA)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSRA(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    // GR1 >> 2 -> GR1\n    const opCode = 0x51;\n    const wordLength = 2;\n    const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n        getAddress = () => Number(target);\n    }\n    else {\n        getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. SRA GR1,adr\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let b = operandAddress;\n                    if (indexGR != null) {\n                        b = b + indexGR.lookup();\n                    }\n                    const v = operand1GR.lookup() >> b;\n                    let overflowFlag = false;\n                    if (((operand1GR.lookupLogical() >> (b - 1)) & 1) !== 0) {\n                        overflowFlag = true;\n                    }\n                    operand1GR.store(v);\n                    flagRegister.setWithOverflowFlag(v, overflowFlag);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSRA.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSRL.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeSRL.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSRL\": () => (/* binding */ makeSRL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSRL(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    // GR1 >>> 2 -> GR1\n    const opCode = 0x53;\n    const wordLength = 2;\n    const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n    let getAddress = () => 0;\n    if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n        getAddress = () => Number(target);\n    }\n    else {\n        getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n    }\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. SRL GR1,adr\n            const operandAddress = getAddress();\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let b = operandAddress;\n                    if (indexGR != null) {\n                        b = b + indexGR.lookup();\n                    }\n                    const v = operand1GR.lookupLogical() >>> b;\n                    let overflowFlag = false;\n                    if (((operand1GR.lookupLogical() >> (b - 1)) & 1) !== 0) {\n                        overflowFlag = true;\n                    }\n                    operand1GR.store(v);\n                    flagRegister.setWithOverflowFlag(v, overflowFlag);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSRL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeST.js":
/*!****************************************!*\
  !*** ./lib/casl2/procedures/makeST.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeST\": () => (/* binding */ makeST)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeST(tokens, labels, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const src = ts[0];\n    const value = ts[1];\n    const srcGR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(src, grMap);\n    const grx = ts.length > 2 ? ts[2] : null;\n    // GR -> memory\n    const opCode = 0x11;\n    const wordLength = 2;\n    const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n    return {\n        wordLength,\n        tokens,\n        gen: () => {\n            // e.g. ST GR1,adr => [0x1110, address]\n            let operandAddress = 0;\n            if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n                operandAddress = (0,_strings__WEBPACK_IMPORTED_MODULE_2__.normalizeAddress)(value);\n            }\n            else {\n                const label = (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(value, labels);\n                operandAddress = label.memAddress;\n            }\n            const bytecode = new ArrayBuffer(4);\n            const view = new DataView(bytecode);\n            view.setUint8(0, opCode);\n            view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(srcGR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n            view.setUint16(2, operandAddress, false);\n            return {\n                bytecode,\n                proc: (PR) => {\n                    let address = operandAddress;\n                    if (indexGR != null) {\n                        address = address + indexGR.lookup();\n                    }\n                    const value = srcGR.lookup();\n                    memory.store(address, value);\n                    (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                }\n            };\n        }\n    };\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeST.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSUBA.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeSUBA.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSUBA\": () => (/* binding */ makeSUBA)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSUBA(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1-GR2 -> GR1\n        const opCode = 0x25;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. SUBA GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() - operand2GR.lookup();\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1-10 -> GR1\n        const opCode = 0x21;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. SUBA GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() - memory.lookup(address);\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSUBA.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeSUBL.js":
/*!******************************************!*\
  !*** ./lib/casl2/procedures/makeSUBL.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeSUBL\": () => (/* binding */ makeSUBL)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeSUBL(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1-GR2 -> GR1\n        const opCode = 0x27;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. SUBL GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookupLogical() - operand2GR.lookupLogical();\n                        operand1GR.storeLogical(v);\n                        flagRegister.setLogical(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1-10 -> GR1\n        const opCode = 0x23;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. SUBL GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookupLogical() - memory.lookupLogical(address);\n                        operand1GR.storeLogical(v);\n                        flagRegister.setLogical(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeSUBL.js?");

/***/ }),

/***/ "./lib/casl2/procedures/makeXOR.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/makeXOR.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeXOR\": () => (/* binding */ makeXOR)\n/* harmony export */ });\n/* harmony import */ var _labelAccessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labelAccessor */ \"./lib/casl2/procedures/labelAccessor.js\");\n/* harmony import */ var _registerAccessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registerAccessor */ \"./lib/casl2/procedures/registerAccessor.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"./lib/casl2/procedures/strings.js\");\n\n\n\nfunction makeXOR(tokens, labels, flagRegister, grMap, memory) {\n    const ts = tokens.operand.split(\",\");\n    const operand1 = ts[0];\n    const target = ts[1];\n    const grx = ts.length > 2 ? ts[2] : null;\n    if ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.isGeneralRegister)(target)) {\n        // GR1 XOR GR2 -> GR1\n        const opCode = 0x36;\n        const wordLength = 1;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        const operand2GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(target, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. XOR GR1,GR2\n                const bytecode = new ArrayBuffer(2);\n                const byteArray = new Uint8Array(bytecode, 0, 2);\n                byteArray[0] = opCode;\n                byteArray[1] = ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand2GR);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        const v = operand1GR.lookup() ^ operand2GR.lookup();\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n    else {\n        // GR1 XOR 10 -> GR1\n        const opCode = 0x32;\n        const wordLength = 2;\n        const operand1GR = (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(operand1, grMap);\n        let getAddress = () => 0;\n        if ((0,_strings__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(target)) {\n            getAddress = () => Number(target);\n        }\n        else {\n            getAddress = () => (0,_labelAccessor__WEBPACK_IMPORTED_MODULE_0__.getLabelOrThrow)(target, labels).memAddress;\n        }\n        const indexGR = grx == null ? null : (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.getGrOrThrow)(grx, grMap);\n        return {\n            wordLength,\n            tokens,\n            gen: () => {\n                // e.g. XOR GR1,adr\n                const operandAddress = getAddress();\n                const bytecode = new ArrayBuffer(4);\n                const view = new DataView(bytecode);\n                view.setUint8(0, opCode);\n                view.setUint8(1, ((0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(operand1GR) << 4) + (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.grToBytecode)(indexGR));\n                view.setUint16(2, operandAddress, false);\n                return {\n                    bytecode,\n                    proc: (PR) => {\n                        let address = operandAddress;\n                        if (indexGR != null) {\n                            address = address + indexGR.lookup();\n                        }\n                        const v = operand1GR.lookup() ^ memory.lookup(address);\n                        operand1GR.store(v);\n                        flagRegister.set(v);\n                        (0,_registerAccessor__WEBPACK_IMPORTED_MODULE_1__.advancePR)(PR, wordLength);\n                    }\n                };\n            }\n        };\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/makeXOR.js?");

/***/ }),

/***/ "./lib/casl2/procedures/registerAccessor.js":
/*!**************************************************!*\
  !*** ./lib/casl2/procedures/registerAccessor.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isGeneralRegister\": () => (/* reexport safe */ _infra_register__WEBPACK_IMPORTED_MODULE_0__.isGeneralRegister),\n/* harmony export */   \"GeneralRegister\": () => (/* reexport safe */ _infra_register__WEBPACK_IMPORTED_MODULE_0__.GeneralRegister),\n/* harmony export */   \"FlagRegister\": () => (/* reexport safe */ _infra_register__WEBPACK_IMPORTED_MODULE_0__.FlagRegister),\n/* harmony export */   \"END_ADDRESS\": () => (/* reexport safe */ _infra_register__WEBPACK_IMPORTED_MODULE_0__.END_ADDRESS),\n/* harmony export */   \"getGrOrThrow\": () => (/* binding */ getGrOrThrow),\n/* harmony export */   \"grToBytecode\": () => (/* binding */ grToBytecode),\n/* harmony export */   \"advancePR\": () => (/* binding */ advancePR),\n/* harmony export */   \"setPR\": () => (/* binding */ setPR)\n/* harmony export */ });\n/* harmony import */ var _infra_register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../infra/register */ \"./lib/infra/register.js\");\n\nfunction getGrOrThrow(text, grMap) {\n    const gr = grMap.get(text);\n    if (gr == null) {\n        throw new Error(`not found Register: ${text}`);\n    }\n    return gr;\n}\nfunction grToBytecode(gr) {\n    if (gr == null)\n        return 0;\n    switch (gr.name) {\n        case \"GR1\":\n            return 1;\n        case \"GR2\":\n            return 2;\n        case \"GR3\":\n            return 3;\n        case \"GR4\":\n            return 4;\n        case \"GR5\":\n            return 5;\n        case \"GR6\":\n            return 6;\n        case \"GR7\":\n            return 7;\n    }\n    return 0;\n}\nfunction advancePR(PR, words) {\n    const v = PR.lookup();\n    PR.store(v + words);\n}\nfunction setPR(PR, address) {\n    PR.store(address);\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/registerAccessor.js?");

/***/ }),

/***/ "./lib/casl2/procedures/strings.js":
/*!*****************************************!*\
  !*** ./lib/casl2/procedures/strings.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isDigits\": () => (/* binding */ isDigits),\n/* harmony export */   \"isNumeric\": () => (/* binding */ isNumeric),\n/* harmony export */   \"isHexadecimal\": () => (/* binding */ isHexadecimal),\n/* harmony export */   \"isJisX0201\": () => (/* binding */ isJisX0201),\n/* harmony export */   \"isAddress\": () => (/* binding */ isAddress),\n/* harmony export */   \"normalizeAddress\": () => (/* binding */ normalizeAddress)\n/* harmony export */ });\nfunction isDigits(s) {\n    return digits.test(s);\n}\nconst digits = /^[0-9]+$/;\nfunction isNumeric(s) {\n    return numFmt.test(s);\n}\nconst numFmt = /^-?[1-9]?[0-9]+$/;\nfunction isHexadecimal(s) {\n    return hexFmt.test(s);\n}\nconst hexFmt = /^#[0-9A-Fa-f]{4}$/;\nfunction isJisX0201(s) {\n    return jisX0201Fmt.test(s);\n}\nconst jisX0201Fmt = /^[\\s!\"#$%&'()*+,-./0-9:;<=>?@A-Z\\[¥\\]^_`a-z{|}~]+$/;\nfunction isAddress(s) {\n    return addressFmt.test(s);\n}\nconst addressFmt = /^#?[0-9]+$/;\nfunction normalizeAddress(s) {\n    if (s.startsWith(\"#\")) {\n        return parseInt(s.substring(1), 16);\n    }\n    else {\n        return parseInt(s, 10);\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/procedures/strings.js?");

/***/ }),

/***/ "./lib/casl2/tokenizer.js":
/*!********************************!*\
  !*** ./lib/casl2/tokenizer.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tokenize\": () => (/* binding */ tokenize)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./lib/casl2/types.js\");\n\nconst splitReg = /\\t+/;\nfunction tokenize(line, lineNum, instructionNum) {\n    let result = line.trimRight().split(splitReg);\n    if (result.length == 2) {\n        result = result.concat(\"\");\n    }\n    if (result.length != 3) {\n        return new Error(`invalid token num. L${lineNum + 1} line:\"${line}\"`);\n    }\n    return new _types__WEBPACK_IMPORTED_MODULE_0__.Tokens(lineNum, instructionNum, result[0], result[1], result[2]);\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/tokenizer.js?");

/***/ }),

/***/ "./lib/casl2/types.js":
/*!****************************!*\
  !*** ./lib/casl2/types.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tokens\": () => (/* binding */ Tokens)\n/* harmony export */ });\nclass Tokens {\n    constructor(lineNum, instructionNum, label, operator, operand) {\n        this.lineNum = lineNum;\n        this.instructionNum = instructionNum;\n        this.label = label;\n        this.operator = operator;\n        this.operand = operand;\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/casl2/types.js?");

/***/ }),

/***/ "./lib/infra/memory.js":
/*!*****************************!*\
  !*** ./lib/infra/memory.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Memory\": () => (/* binding */ Memory)\n/* harmony export */ });\n/* harmony import */ var _casl2_procedures_strings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../casl2/procedures/strings */ \"./lib/casl2/procedures/strings.js\");\n\nclass Memory {\n    constructor() {\n        this.content = new DataView(new ArrayBuffer(WORD_LENGTH * 65536));\n    }\n    lookup(address) {\n        return this.content.getInt16(address * WORD_LENGTH);\n    }\n    lookupLogical(address) {\n        return this.content.getUint16(address * WORD_LENGTH);\n    }\n    store(address, value) {\n        if (address * WORD_LENGTH > this.content.byteLength) {\n            throw new Error(`invalid address. address=${address}`);\n        }\n        if (value > INT16_MAX) {\n            throw new Error(`invalid value. value=${value}`);\n        }\n        if (typeof value === 'string') {\n            if (!(0,_casl2_procedures_strings__WEBPACK_IMPORTED_MODULE_0__.isNumeric)(value)) {\n                throw new Error(`invalid value. value=${value}`);\n            }\n            this.content.setInt16(address * WORD_LENGTH, Number(value));\n        }\n        else {\n            this.content.setInt16(address * WORD_LENGTH, value);\n        }\n    }\n    storeLogical(address, value) {\n        if (address * WORD_LENGTH > this.content.byteLength) {\n            throw new Error(`invalid address. address=${address}`);\n        }\n        if (value > UINT16_MAX) {\n            throw new Error(`invalid value. value=${value}`);\n        }\n        if (typeof value === 'string') {\n            if (!(0,_casl2_procedures_strings__WEBPACK_IMPORTED_MODULE_0__.isNumeric)(value)) {\n                throw new Error(`invalid value. value=${value}`);\n            }\n            this.content.setInt16(address * WORD_LENGTH, Number(value));\n        }\n        else {\n            this.content.setInt16(address * WORD_LENGTH, value);\n        }\n    }\n    check(address, value) {\n    }\n}\nconst WORD_LENGTH = 2; // byte\nconst INT16_MAX = 32767;\nconst UINT16_MAX = 65535;\n\n\n//# sourceURL=webpack://cals2-web/./lib/infra/memory.js?");

/***/ }),

/***/ "./lib/infra/register.js":
/*!*******************************!*\
  !*** ./lib/infra/register.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isGeneralRegister\": () => (/* binding */ isGeneralRegister),\n/* harmony export */   \"GeneralRegister\": () => (/* binding */ GeneralRegister),\n/* harmony export */   \"FlagRegister\": () => (/* binding */ FlagRegister),\n/* harmony export */   \"END_ADDRESS\": () => (/* binding */ END_ADDRESS)\n/* harmony export */ });\nfunction isGeneralRegister(text) {\n    return [\"GR0\", \"GR1\", \"GR2\", \"GR3\", \"GR4\", \"GR5\", \"GR6\", \"GR7\"].indexOf(text) >= 0;\n}\nclass GeneralRegister {\n    constructor(name) {\n        this.content = new DataView(new ArrayBuffer(2));\n        this.name = name;\n    }\n    lookup() {\n        return this.content.getInt16(0);\n    }\n    lookupLogical() {\n        return this.content.getUint16(0);\n    }\n    store(value) {\n        this.content.setInt16(0, value);\n    }\n    storeLogical(value) {\n        this.content.setUint16(0, value);\n    }\n}\nclass FlagRegister {\n    constructor() {\n        this.overflowFlag = false;\n        this.signFlag = false;\n        this.zeroFlag = false;\n    }\n    of() {\n        return this.overflowFlag;\n    }\n    sf() {\n        return this.signFlag;\n    }\n    zf() {\n        return this.zeroFlag;\n    }\n    set(v) {\n        if (-32768 <= v && v <= 32767) {\n            this.overflowFlag = false;\n        }\n        else {\n            this.overflowFlag = true;\n        }\n        this.setSfZf(v);\n    }\n    setWithOverflowFlag(v, overflowFlag) {\n        this.overflowFlag = overflowFlag;\n        this.setSfZf(v);\n    }\n    setLogical(v) {\n        if (0 <= v && v <= 65535) {\n            this.overflowFlag = false;\n        }\n        else {\n            this.overflowFlag = true;\n        }\n        this.setSfZf(v);\n    }\n    setSfZf(v) {\n        if ((v & 0x8000) !== 0) {\n            // negative\n            this.signFlag = true;\n        }\n        else {\n            this.signFlag = false;\n        }\n        if ((v & 0xffff) !== 0) {\n            // not zero\n            this.zeroFlag = false;\n        }\n        else {\n            this.zeroFlag = true;\n        }\n    }\n    setByCPA(v) {\n        this.overflowFlag = false;\n        if (v < 0) {\n            // negative\n            this.signFlag = true;\n        }\n        else {\n            this.signFlag = false;\n        }\n        if (v == 0) {\n            this.zeroFlag = true;\n        }\n        else {\n            // not zero\n            this.zeroFlag = false;\n        }\n    }\n    setLogicalByCPL(v) {\n        this.overflowFlag = false;\n        if (v < 0) {\n            // negative\n            this.signFlag = true;\n        }\n        else {\n            this.signFlag = false;\n        }\n        if (v == 0) {\n            this.zeroFlag = true;\n        }\n        else {\n            // not zero\n            this.zeroFlag = false;\n        }\n    }\n    toString() {\n        const of = this.overflowFlag ? \"1\" : \"0\";\n        const sf = this.signFlag ? \"1\" : \"0\";\n        const zf = this.zeroFlag ? \"1\" : \"0\";\n        return of + sf + zf;\n    }\n}\nconst END_ADDRESS = -32678;\n\n\n//# sourceURL=webpack://cals2-web/./lib/infra/register.js?");

/***/ }),

/***/ "./lib/machine.js":
/*!************************!*\
  !*** ./lib/machine.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeMachine\": () => (/* binding */ makeMachine),\n/* harmony export */   \"Commet2\": () => (/* binding */ Commet2)\n/* harmony export */ });\n/* harmony import */ var _infra_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./infra/memory */ \"./lib/infra/memory.js\");\n/* harmony import */ var _infra_register__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infra/register */ \"./lib/infra/register.js\");\n/* harmony import */ var _assembler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assembler */ \"./lib/assembler.js\");\n\n\n\nfunction makeMachine(input, startMemAddress) {\n    return new Commet2(input, startMemAddress);\n}\nclass Commet2 {\n    constructor(input, startMemAddress) {\n        this.FR = new _infra_register__WEBPACK_IMPORTED_MODULE_1__.FlagRegister();\n        this.grMap = new Map();\n        this.PR = new _infra_register__WEBPACK_IMPORTED_MODULE_1__.GeneralRegister(\"PR\");\n        this.memory = new _infra_memory__WEBPACK_IMPORTED_MODULE_0__.Memory();\n        this.SP = new _infra_register__WEBPACK_IMPORTED_MODULE_1__.GeneralRegister(\"SP\");\n        this.labels = new Map();\n        this.assembleResult = [];\n        this.procMap = new Map();\n        for (let i = 0; i <= 7; i++) {\n            const name = `GR${i}`;\n            this.grMap.set(name, new _infra_register__WEBPACK_IMPORTED_MODULE_1__.GeneralRegister(name));\n        }\n        this.PR.store(startMemAddress);\n        const { assembleResult, procMap } = (0,_assembler__WEBPACK_IMPORTED_MODULE_2__.assemble)(startMemAddress, input, this.labels, this.FR, this.grMap, this.memory, this.SP);\n        this.assembleResult = assembleResult;\n        this.procMap = procMap;\n        this.SP.storeLogical(0x9001);\n        this.memory.store(0x9001, _infra_register__WEBPACK_IMPORTED_MODULE_1__.END_ADDRESS);\n    }\n    step() {\n        const row = this.procMap.get(this.PR.lookup());\n        if (row == null) {\n            return false;\n        }\n        row.proc(this.PR);\n        const next = this.PR.lookup();\n        if (next == -32678) {\n            return false;\n        }\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://cals2-web/./lib/machine.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_machine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/machine */ \"./lib/machine.js\");\n\n\nfunction H2(text) {\n  const header = document.createElement(\"h2\")\n  header.innerText = text\n  return header\n}\n\nfunction TH(text) {\n  const element = document.createElement(\"th\")\n  element.innerText = text\n  return element\n}\n\nfunction TD(text) {\n  const element = document.createElement(\"td\")\n  element.innerText = text\n  return element\n}\n\nfunction TR(...elms) {\n  const row = document.createElement(\"tr\")\n  for (let elm of elms) {\n    row.appendChild(elm)\n  }\n  return row\n}\n\nfunction INPUT_ADDRESS(labelText, id) {\n  const label = document.createElement(\"label\")\n  label.innerText = labelText\n  label.htmlFor = id\n  const input = document.createElement(\"input\")\n  input.id = id\n  input.type = \"number\"\n  input.min = 0\n  input.max = 9000\n  input.step = 8\n  return [label, input]\n}\n\nfunction displayOpecode(bytecode) {\n  let v = \"\"\n  if (bytecode != null) {\n    const view = new DataView(bytecode)\n    if (bytecode.byteLength >= 2) {\n      v = view.getUint8(0).toString(16).padStart(2, \"0\")\n      v = \"0x\" + v + view.getUint8(1).toString(16).padStart(2, \"0\")\n    }\n    if (bytecode.byteLength >= 4) {\n      v = v + \" \"\n      v = v + \"0x\" + view.getUint16(2).toString(16).padStart(4, \"0\")\n    }\n  }\n  return v\n}\n\nconst COLOR = {\n  main: \"#d9de2f\",\n  sub: \"#a7865a\",\n  accent: \"#f5d942\",\n  danger: \"#dc932a\",\n  white: \"#ffffff\",\n}\n\nfunction toHexString(x) {\n  return \"0x\" + x.toString(16).padStart(4, \"0\")\n}\n\nfunction component() {\n  const globalConf = {\n    startAddress: 2000,\n  }\n\n  const assembled = {\n    machine: null,\n    inputText: \"\",\n  }\n\n  function assemble(inputText) {\n    console.log(\"=== ASSEMBLE START ===\")\n    console.log(\"startAddress: \", globalConf.startAddress)\n    assembled.inputText = inputText\n    assembled.machine = (0,_lib_machine__WEBPACK_IMPORTED_MODULE_0__.makeMachine)(inputText.replaceAll(\"  \", \"\\t\"), globalConf.startAddress)\n    console.log(\"=== ASSEMBLE END ===\")\n    console.log(assembled.machine.assembleResult)\n  }\n\n  function step() {\n    const hasNext = assembled.machine.step()\n    return hasNext\n  }\n\n  const sample = `SAMPLE\tSTART\n\tLD\tGR1,A\n\tLD\tGR2,B\n\tADDA\tGR1,GR2\n\tST\tGR1,C\n\tRET\nA\tDC\t3\nB\tDC\t5\nC\tDS\t1\n\tEND`\n\n  const renderInputArea = (container, assembleResultArea, machineStateArea) => {\n    container.appendChild(H2(\"Input source code\"))\n\n    const sourceCodeEditor = document.createElement(\"textarea\")\n    sourceCodeEditor.cols = 80\n    sourceCodeEditor.rows = 20\n    sourceCodeEditor.onkeydown = (event) => {\n      if (event.keyCode == 9 || event.key == \"Tab\" || event.keyCode == 32 || event.key == \"\") {\n        event.preventDefault()\n        const pos = sourceCodeEditor.selectionStart\n        const left = sourceCodeEditor.value.substr(0, pos)\n        const right = sourceCodeEditor.value.substr(pos, sourceCodeEditor.value.length)\n        sourceCodeEditor.value = left + \"\\t\" + right\n        sourceCodeEditor.selectionEnd = pos+1\n      }\n    }\n    sourceCodeEditor.innerHTML = sample\n    sourceCodeEditor.autofocus = true\n    sourceCodeEditor.selectionStart = sourceCodeEditor.value.length\n    sourceCodeEditor.selectionEnd = sourceCodeEditor.selectionStart\n    container.appendChild(sourceCodeEditor)\n\n    const globalConfBox = document.createElement(\"div\")\n    const [startAddressLabel, startAddressInput] = INPUT_ADDRESS(\"Start address : \", \"input_text_start_address\")\n    startAddressInput.value = globalConf.startAddress\n    startAddressInput.oninput = () => {\n      globalConf.startAddress = Number(startAddressInput.value)\n    }\n    globalConfBox.appendChild(startAddressLabel)\n    globalConfBox.appendChild(startAddressInput)\n    container.appendChild(globalConfBox)\n\n    const assembleErrorMessage = document.createElement(\"p\")\n    assembleErrorMessage.style.fontSize = \"1.2rem\"\n    assembleErrorMessage.style.fontWeight = \"bold\"\n    assembleErrorMessage.style.color = COLOR.danger\n    container.appendChild(assembleErrorMessage)\n\n    const assembleButton = document.createElement(\"button\")\n    assembleButton.textContent = \"Assemble\"\n    assembleButton.onclick = () => {\n      try {\n        assembleErrorMessage.innerText = \"\"\n        assemble(sourceCodeEditor.value)\n      } catch(e) {\n        let errorMessage = e.message\n        if (e.tokens) {\n          errorMessage = \"L\" + (e.tokens.lineNum + 1) + \": \" + e.message\n        }\n        assembleErrorMessage.innerText = errorMessage\n        alert(errorMessage)\n        throw e\n      }\n      renderAssembleResultArea(assembleResultArea, machineStateArea)\n      renderMachineState(machineStateArea)\n    }\n    container.appendChild(assembleButton)\n  }\n\n  const renderAssembleResultArea = (container, machineStateArea) => {\n    container.innerHTML = \"\"\n\n    container.appendChild(H2(\"Assemble result\"))\n\n    const assembleResult = document.createElement(\"table\")\n    assembleResult.id = \"assemble_result\"\n    assembleResult.appendChild(TR(\n      TH(\"#\"),\n      TH(\"opecode\"),\n      TH(\"address\"),\n      TH(\"\"),\n      TH(\"\"),\n      TH(\"\"),\n    ))\n    for (let line of assembled.machine.assembleResult) {\n      const operator = line.tokens.operator\n      assembleResult.appendChild(TR(\n        TD(line.tokens.lineNum),\n        TD(displayOpecode(line.bytecode)),\n        TD(operator.startsWith(\"START\") || operator.startsWith(\"END\") ? \"\" : line.memAddress),\n        TD(line.tokens.label),\n        TD(line.tokens.operator),\n        TD(line.tokens.operand),\n      ))\n    }\n    container.appendChild(assembleResult)\n\n    function coloring() {\n      const rows = document.querySelectorAll(\"#assemble_result tr\")\n      rows.forEach((row, i) => {\n        if (i == 0) return\n        const address = row.querySelectorAll(\"td\").item(2).innerText\n        if (assembled.machine.PR.lookupLogical() == address) {\n          row.style.backgroundColor = COLOR.accent\n        } else {\n          row.style.backgroundColor = null\n        }\n      })\n    }\n\n    const resetButton = document.createElement(\"button\")\n    resetButton.textContent = \"Reset\"\n    resetButton.onclick = () => {\n      assemble(assembled.inputText)\n      renderAssembleResultArea(container, machineStateArea)\n      renderMachineState(machineStateArea)\n    }\n\n    const stepOverButton = document.createElement(\"button\")\n    stepOverButton.textContent = \"Step over\"\n    stepOverButton.onclick = () => {\n      const hasNext = step()\n      if (hasNext) {\n        coloring()\n        renderMachineState(machineStateArea)\n      } else {\n        stepOverButton.disabled = true\n        runButton.disabled = true\n      }\n    }\n\n    const runButton = document.createElement(\"button\")\n    runButton.textContent = \"Run\"\n    runButton.onclick = () => {\n      let hasNext = true\n      const intervalId = setInterval(() => {\n        hasNext = step()\n        if (hasNext) {\n          coloring()\n          renderMachineState(machineStateArea)\n        } else {\n          clearInterval(intervalId)\n        }\n      }, 500)\n      stepOverButton.disabled = true\n      runButton.disabled = true\n    }\n\n    container.appendChild(stepOverButton)\n    container.appendChild(runButton)\n    container.appendChild(resetButton)\n\n    coloring()\n  }\n\n  const renderMachineState = (container) => {\n    console.log(assembled.machine)\n    container.innerHTML = \"\"\n\n    container.appendChild(H2(\"Machine states\"))\n    const statesBox = document.createElement(\"div\")\n    statesBox.id = \"machine_states\"\n    statesBox.style.display = \"flex\"\n    statesBox.style.justifyContent = \"space-between\"\n\n    const leftBox = document.createElement(\"div\")\n    const grTable = document.createElement(\"table\")\n    grTable.appendChild(TR(\n      TH(\"PR\"),\n      TD(assembled.machine.PR.lookupLogical()),\n    ))\n    for (let gr of [\"GR0\", \"GR1\", \"GR2\", \"GR3\", \"GR4\", \"GR5\", \"GR6\", \"GR7\"]) {\n      grTable.appendChild(TR(\n        TH(gr),\n        TD(assembled.machine.grMap.get(gr).lookup()),\n      ))\n    }\n    leftBox.appendChild(grTable)\n\n    const frTable = document.createElement(\"table\")\n    frTable.appendChild(TR(\n      TH(\"FR\"),\n      TD(assembled.machine.FR.of() ? \"OF: 1\" : \"OF: 0\"),\n      TD(assembled.machine.FR.sf() ? \"SF: 1\" : \"SF: 0\"),\n      TD(assembled.machine.FR.zf() ? \"ZF: 1\" : \"ZF: 0\"),\n    ))\n    leftBox.appendChild(frTable)\n\n    const spTable = document.createElement(\"table\")\n    spTable.appendChild(TR(\n      TH(\"SP\"),\n      TD(assembled.machine.SP.lookupLogical()),\n    ))\n    leftBox.appendChild(spTable)\n    statesBox.appendChild(leftBox)\n\n    const memoryBox = document.createElement(\"div\")\n    const [displayAddressLabel, displayAddressInput] = INPUT_ADDRESS(\"Display from : \", \"display_address\")\n    displayAddressInput.value = globalConf.startAddress\n    displayAddressInput.onchange = () => {\n      console.log(Number(displayAddressInput.value))\n      renderMemoryTable(Number(displayAddressInput.value))\n    }\n    memoryBox.appendChild(displayAddressLabel)\n    memoryBox.appendChild(displayAddressInput)\n    function renderMemoryTable(startAddress) {\n      const id = \"memory_table\"\n      const target = document.getElementById(id)\n      if (target) {\n        memoryBox.removeChild(target)\n      }\n      const memoryTable = document.createElement(\"table\")\n      memoryTable.id = id\n      memoryTable.appendChild(TR(\n        TH(\"address\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n        TH(\"\"),\n      ))\n      let i = startAddress;\n      const end = i + 8*16\n      while (i < end) {\n        memoryTable.appendChild(TR(\n          TH(i.toString()),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n          TD(toHexString(assembled.machine.memory.lookupLogical(i++))),\n        ))\n      }\n      memoryBox.appendChild(memoryTable)\n    }\n    renderMemoryTable(globalConf.startAddress)\n    statesBox.appendChild(memoryBox)\n    container.appendChild(statesBox)\n  }\n\n  return {\n    render: () => {\n      const container = document.createElement(\"div\")\n\n      const inputArea = document.createElement(\"div\")\n      const assembleResultArea = document.createElement(\"div\")\n      const machineStateArea = document.createElement(\"div\")\n\n      renderInputArea(inputArea, assembleResultArea, machineStateArea)\n\n      container.appendChild(inputArea)\n      container.appendChild(assembleResultArea)\n      container.appendChild(machineStateArea)\n      return container\n    }\n  }\n}\n\ndocument.getElementById(\"app\").appendChild(component().render())\n\n\n//# sourceURL=webpack://cals2-web/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;